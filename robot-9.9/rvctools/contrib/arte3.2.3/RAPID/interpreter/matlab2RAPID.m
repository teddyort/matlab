%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   matlab2RAPID creates the equivalent RAPID program of the matlab program%% 	matlab2RAPID(SinkFile_name, sinkfile_name) saves the program on a new file%   called sinkfile_name.prg in the path.  %%   For example:%   Example: %   matlab2RAPID('SourceFile.m','SinkFile.prg')%%   gets the matlab instructions wtritten for simulation in SinkFile.m%   and write the equivalent RAPID instruction in sinkfile.prg%%%   Author: Angel Rodriguez. Universidad Miguel Hernandez de Elche. email:%   arodgre@gmail.com %%   Coauthor: Arturo Gil. Universidad Miguel Hernandez de Elche. email:%   arturo.gil@umh.es date:   24/09/2013%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%function matlab2RAPID(varargin)if nargin==0    [FileName,PathName] = uigetfile({'*.m','SinkFile (*.m)'},'Pick a program.m file', 'MultiSelect', 'off');    Source_name=FileName;%Saves name of the file    i=1;    while Source_name(i)~='.'        if i<6        Sink_name(i)=Source_name(i);        end        i=i+1;    end    Module_name=upper(Sink_name);    Sink_name=strcat(Sink_name,'.prg');    cd(PathName);elseif nargin==1    Source_name=varargin{1};    i=1;    while Source_name(i)~='.'         if i<6        Sink_name(i)=Source_name(i);        end        i=i+1;    end    Sink_name=strcat(Sink_name,'.prg');    %Path_name: get the path of Source_file    %cd(Path_name);elseif nargin==2    Source_name=varargin(1);    Sink_name=varargin(2);    %Path_name: get the path of Source_file    %cd(Path_name);end  fprintf('Converting Matlab into RAPID lenguaje...\n\n');    fprintf('The name of the RAPID program is: %s\n\n', Sink_name);  SinkFile=fopen(Sink_name,'w+');  a=0;  SourceFile = fopen(Source_name, 'r');  %include a comment block    fprintf(SinkFile,'%c%c%c\nVERSION:1\nLANGUAGE:ENGLISH\n%c%c%c\n',37, 37, 37,37, 37, 37);      lines=1; %Variable to control de line of the source file  string=fgets(SourceFile);% fgets gets the next line and saves it in string  %The first line with code must be the main function for writing the  %module sentence  while isempty(strfind(string,'%'))==0 | string(1)==10 | string(1)==' '      if string(1)==10          fprintf(SinkFile,'\n');      elseif string(1)==' '              if isempty(strfind(string,'%'))==0                  i=strfind(strfind(string,'%'));                  fprintf(SinkFile,'!%s', string(i+1:length(string)));              end              i=0;              while string(i)==' '                  i=i+1;              end              if string(i)==10                    fprintf(SinkFile,'\n');              end      else      fprintf(SinkFile,'!%s', string(2:length(string)));      end      string=fgets(SourceFile);  end  if isempty(strfind(string,'function'))==1      fprintf(SinkFile,'MODULE %s\n',Module_name);      a=1;%Var used to mantein the first sentence when is not a function declaration  else      Start_Name=strfind(string,' ');      string=upper(string(Start_Name(1)+1:Start_Name(1)+5))      fprintf(SinkFile,'MODULE %s',string);  end      while ~feof(SourceFile)%Reads the file until it�s ends    if a~=1%If there's no function declaration first sentence is saved in string  string=fgets(SourceFile);  end  a=0;  line_array = char(string);%The string is saved as an array  %%%% Each line is readed and teh key word is looked for  if FindCommentsOrNewLines(line_array,SinkFile,lines,SourceFile)==1  else      InitialTab(line_array,SinkFile);      words_array=strtokenizador(line_array,lines,SinkFile);      if strfinder('function',words_array,lines)==1        Start_Name=strfind(string,' ');        string=string(Start_Name(1)+1:length(string)-1);        contrabarra= '\';        if isempty(strfind(string,'('))==1            fprintf(SinkFile,'PROC %s()\n',string);        else            fprintf(SinkFile,'PROC %s\n',string);        end        if strfinder('main',words_array,lines)==1            fprintf(SinkFile,'\nConfJ %cOff;\nConfL %cOff;\n',contrabarra, contrabarra);        end        ModifyFunction(SourceFile,SinkFile);      else        FindAndModify(words_array,lines,SourceFile,string,SinkFile);      end      lines=lines+1;      clearvars words_array;      clearvars line_array;  end%else&if  end% End of the file�s detection  p=fclose(SourceFile);  if p==1    fprintf('An error ocurred while file was being closed\n');  end    fprintf(SinkFile,'\nENDMODULE');  fclose(SinkFile);end function words_array=strtokenizador(line_array,lines,SinkFile)%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  Function that separates the sentence on it's words              %%%%%%  This function does not separate variables whit '_'              %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  i=1;%Integer that marks the positi�n in line_array  a=0;%Integer that saves the begining of each word  word_number=0;%Counts the number of words in word_array  InitialTab(line_array,SinkFile);  while i<=length(line_array)    if (line_array(i)>='A'&&line_array(i)<='Z')|(line_array(i)>='a'&&line_array(i)<='z')| line_array(i)=='_'      %If it's a letter goes to the next position    elseif line_array(i)>='0' & line_array(i)<='9'        %If it's a number it's necesary to Know if its a float or a word      %If it�s a float has a point followed by more numbers. If the point      %is detected the word it's not separed      if line_array(i+1)=='.'          i=i+1;                end    else       if i~=a+1%If there are 2 pointsymbol together the second is ignored        j=i-1;        word_number=word_number+1; %there's another word         while j>a            words_array(lines,word_number,j-a)=line_array(j);            j=j-1;         end      end      a=i;%New word's begining     end    i=i+1;  end endfunction FindAndModify(words_array,lines,SourceFile,string,SinkFile)      Functions=FindAndModifyFunctions(words_array,lines,SinkFile);      Cycles=FindAndModifyCycles(words_array,lines,SourceFile,string,SinkFile);      Allocations=FindAndModifyAllocations(string,SinkFile);      if Functions==0 & Cycles==0 & Allocations==0 & isempty(strfind(string,'else'))==1        k=1;        while string(k)==11 | string(k)==32            k=k+1;%Instruction for clear white space and horizontal tab before the asignation        end        fprintf(SinkFile,'%s',string(k:length(string)));      endendfunction finder=FindAndModifyFunctions(words_array,lines,SinkFile)finder=0;if strfinder('MoveJ',words_array,lines)==1    ModifyMoveJ(words_array,lines,SinkFile)    finder=1;endif strfinder('MoveC', words_array,lines)==1    ModifyMoveC(words_array,lines,SinkFile);    finder=1;endif strfinder('MoveL',words_array,lines)==1    ModifyMoveL(words_array,lines,SinkFile);    finder=1;endif strfinder('Waittime',words_array,lines)==1    fprintf(SinkFile,'%s %s;\n', words_array(lines,1,:), words_array(lines,2,:));    finder=1;endif strfinder('global',words_array,lines)==1%Do nothing    finder=1;endif strfinder('end',words_array,lines)==1%Do nothing for function main    finder=1;endif strfinder('drawrobot3d',words_array,lines)==1%Do nothing    finder=1;endif strfinder('simulation',words_array,lines)==1%Do nothing    finder=1;endif strfinder('main',words_array,lines)==1%Do nothing     finder=1;%      if strfinder('function',words_array,lines)==1%          finder=1;%      endendendfunction finder=FindAndModifyCycles(words_array,lines,SourceFile,string,SinkFile)finder=0;if strfinder('for',words_array,lines)==1    ModifyFor(words_array,lines,SourceFile,SinkFile);    finder=1;endif strfinder('while',words_array,lines)==1    ModifyWhile(words_array,lines,SourceFile,string,SinkFile);    finder=1;endif strfinder('if',words_array,lines)==1    ModifyIf(words_array,lines,SourceFile,string,SinkFile);    finder=1;endendfunction ModifyMoveJ(words_array,line, SinkFile)    contrabarra= '\';    word(1,:)=char(words_array(line,2,:));    if strncmp(word,'Offs',4)==1       cad1(1,:)=char(words_array(line,4,:));       cad2(1,:)=char(words_array(line,5,:));       cad3(1,:)=char(words_array(line,6,:));       cad1=int2str(eval(strcat(cad1,'*1000')));       cad2=int2str(eval(strcat(cad2,'*1000')));       cad3=int2str(eval(strcat(cad3,'*1000')));       if size(words_array,2)<10       %If it�s empty we will refer the targetpoint to the world's       %reference system       fprintf(SinkFile,'%s %s(%s,%s,%s,%s),%s,%s,%s%cWObj:=wobj0;\n',words_array(line,1,:), words_array(line,2,:), words_array(line,3,:), cad1, cad2, cad3, words_array(line,7,:),words_array(line,8,:),words_array(line,9,:),contrabarra);       else       fprintf(SinkFile,'%s %s(%s,%s,%s,%s),%s,%s,%s%cWObj:=%s;\n',words_array(line,1,:), words_array(line,2,:), words_array(line,3,:), cad1, cad2, cad3,words_array(line,7,:),words_array(line,8,:),words_array(line,9,:),contrabarra,words_array(line,10,:));         end    else       if size(words_array,2)<6       %If it�s empty we will refer the targetpoint to the world's reference system       fprintf(SinkFile,'%s %s,%s,%s,%s%cWObj:=wobj0;\n',words_array(line,1,:), words_array(line,2,:), words_array(line,3,:), words_array(line,4,:),words_array(line,5,:),contrabarra);       else       fprintf(SinkFile,'%s %s,%s,%s,%s%cWObj:=%s;\n',words_array(line,1,:), words_array(line,2,:), words_array(line,3,:), words_array(line,4,:), words_array(line,5,:),contrabarra,words_array(line,6,:));       end    endendfunction ModifyMoveC(words_array,line,SinkFile)contrabarra= '\';word(1,:)=char(words_array(line,2,:));word2(1,:)=char(words_array(line,3,:));if strncmp(word,'Offs',4)==1%If Offs is found in the first point    word3(1,:)=char(words_array(line,7,:));    if strncmp(word3,'Offs',4)==1% And the second targetpoint it�s also asigned with offs       cad1(1,:)=char(words_array(line,4,:));       cad2(1,:)=char(words_array(line,5,:));       cad3(1,:)=char(words_array(line,6,:));       cad4(1,:)=char(words_array(line,9,:));       cad5(1,:)=char(words_array(line,10,:));       cad6(1,:)=char(words_array(line,11,:));       cad1=int2str(eval(strcat(cad1,'*1000')));       cad2=int2str(eval(strcat(cad2,'*1000')));       cad3=int2str(eval(strcat(cad3,'*1000')));       cad4=int2str(eval(strcat(cad4,'*1000')));       cad5=int2str(eval(strcat(cad5,'*1000')));       cad6=int2str(eval(strcat(cad6,'*1000')));       if size(words_array,2)<15%Wobj isn't defined            fprintf(SinkFile,'%s %s(%s,%s,%s,%s),%s(%s,%s,%s,%s),%s,%s,%s%cWObj:=wobj0;\n',words_array(line,1,:),words_array(line,2,:),words_array(line,3,:),cad1,cad2,cad3,words_array(line,7,:),words_array(line,8,:),cad4,cad5,cad6,words_array(line,12,:),words_array(line,13,:),words_array(line,14,:),contrabarra );        else            fprintf(SinkFile,'%s %s(%s,%s,%s,%s),%s(%s,%s,%s,%s),%s,%s,%s%cWObj:=%s;\n',words_array(line,1,:),words_array(line,2,:),words_array(line,3,:),cad1,cad2,cad3,words_array(line,7,:),words_array(line,8,:),cad4,cad5,cad6,words_array(line,12,:),words_array(line,13,:),words_array(line,14,:),contrabarra,words_array(line,15,:));        end    else%Just the first targetpoint is asigned with offs       cad1(1,:)=char(words_array(line,4,:));       cad2(1,:)=char(words_array(line,5,:));       cad3(1,:)=char(words_array(line,6,:));       cad1=int2str(eval(strcat(cad1,'*1000')));       cad2=int2str(eval(strcat(cad2,'*1000')));       cad3=int2str(eval(strcat(cad3,'*1000')));        if size(words_array,2)<11%Wobj isn't defined            fprintf(SinkFile,'%s %s(%s,%s,%s,%s),%s,%s,%s,%s%cWObj:=wobj0;\n',words_array(line,1,:),words_array(line,2,:),words_array(line,3,:),cad1,cad2,cad3,words_array(line,7,:),words_array(line,8,:),words_array(line,9,:),words_array(line,10,:),contrabarra );        else            fprintf(SinkFile,'%s %s(%s,%s,%s,%s),%s,%s,%s,%s%cWObj:=%s;\n',words_array(line,1,:),words_array(line,2,:),words_array(line,3,:),cad1,cad2,cad3,words_array(line,7,:),words_array(line,8,:),words_array(line,9,:),words_array(line,10,:), contrabarra,words_array(line,11,:));        end    endelseif strncmp(word2,'Offs',4)==1%Just the second targetpoints is asigned with offs       cad1(1,:)=char(words_array(line,5,:));       cad2(1,:)=char(words_array(line,6,:));       cad3(1,:)=char(words_array(line,7,:));       cad1=int2str(eval(strcat(cad1,'*1000')));       cad2=int2str(eval(strcat(cad2,'*1000')));       cad3=int2str(eval(strcat(cad3,'*1000')));    if size(words_array,2)<11%Wobj isn't defined        fprintf(SinkFile,'%s %s,%s(%s,%s,%s,%s),%s,%s,%s%cWObj:=wobj0;\n',words_array(line,1,:),words_array(line,2,:),words_array(line,3,:),words_array(line,4,:),cad1,cad2,cad3,words_array(line,8,:),words_array(line,9,:),words_array(line,10,:),contrabarra );    else        fprintf(SinkFile,'%s %s,%s(%s,%s,%s,%s),%s,%s,%s%cWObj:=%s;\n',words_array(line,1,:),words_array(line,2,:),words_array(line,3,:),words_array(line,4,:),cad1,cad2,cad3,words_array(line,8,:),words_array(line,9,:),words_array(line,10,:), contrabarra,words_array(line,11,:));    endelse %Offs it�s not used    if size(words_array,2)<6        fprintf(SinkFile,'%s %s,%s,%s,%s,%s%cWObj:=wobj0;\n',words_array(line,1,:), words_array(line,2,:), words_array(line,3,:), words_array(line,4,:), words_array(line,5,:),words_array(line,6,:),contrabarra);    else        fprintf(SinkFile,'%s %s,%s,%s,%s,%s%cWObj:=%s;\n',words_array(line,1,:), words_array(line,2,:), words_array(line,3,:), words_array(line,4,:), words_array(line,5,:),words_array(line,6,:),contrabarra,words_array(line,6,:));    endendendfunction ModifyMoveL(words_array,line,SinkFile)    contrabarra= '\';    word(1,:)=char(words_array(line,2,:));    if strncmp(word,'Offs',4)==1       cad1(1,:)=char(words_array(line,4,:));       cad2(1,:)=char(words_array(line,5,:));       cad3(1,:)=char(words_array(line,6,:));       cad1=int2str(eval(strcat(cad1,'*1000')));       cad2=int2str(eval(strcat(cad2,'*1000')));       cad3=int2str(eval(strcat(cad3,'*1000')));       if size(words_array,2)<11       %If it�s empty we will refer the targetpoint to the world's reference system       fprintf(SinkFile,'%s %s(%s,%s,%s,%s),%s,%s,%s%cWObj:=wobj0;\n',words_array(line,1,:), words_array(line,2,:), words_array(line,3,:),cad1,cad2,cad3,words_array(line,7,:),words_array(line,8,:),words_array(line,9,:),contrabarra);       else       fprintf(SinkFile,'%s %s(%s,%s,%s,%s),%s,%s,%s%cWObj:=%s;\n',words_array(line,1,:), words_array(line,2,:), words_array(line,3,:), cad1,cad2,cad3,words_array(line,7,:),words_array(line,8,:),words_array(line,9,:),contrabarra,words_array(line,11,:));         end    else       if size(words_array,2)<8       %If it�s empty we will refer the targetpoint to the world's reference system       fprintf(SinkFile,'%s %s,%s,%s,%s%cWObj:=wobj0;\n',words_array(line,1,:), words_array(line,2,:), words_array(line,3,:), words_array(line,4,:),words_array(line,5,:),contrabarra);       else       fprintf(SinkFile,'%s %s,%s,%s,%s%cWObj:=%s;\n',words_array(line,1,:), words_array(line,2,:), words_array(line,3,:), words_array(line,4,:), words_array(line,5,:),contrabarra,words_array(line,7,:));       end    endendfunction ModifyFunction(SourceFile,SinkFile)    string = fgets(SourceFile);    line_Func=1;    while isempty(strfind(string,'end'))==1        line_array = char(string);        if FindCommentsOrNewLines(line_array,SinkFile,line_Func,SourceFile)==1        else                words_array_func=strtokenizador(line_array,line_Func,SinkFile);            FindAndModify(words_array_func,line_Func,SourceFile,string,SinkFile)        end        string=fgets(SourceFile);        line_Func=line_Func+1;    end    fprintf(SinkFile,'ENDPROC\n');endfunction ModifyFor(words_array,line,SourceFile,SinkFile)if size(words_array,2)==4    fprintf(SinkFile,'FOR %s FROM %s TO %s  DO\n', words_array(line,2,:), words_array(line,3,:), words_array(line,4,:));endif size(words_array,2)==5    fprintf(SinkFile,'FOR %s FROM %s TO %s [STEP %s] DO\n', words_array(line,2,:), words_array(line,3,:),  words_array(line,5,:), words_array(line,4,:));endauxiliar = fgets(SourceFile);while isempty(strfind(auxiliar,'end'))==1    line=line+1;    line_array = char(auxiliar);    if FindCommentsOrNewLines(line_array,SinkFile,line,SourceFile)==1    else    words_array=strtokenizador(line_array,line,SinkFile);    FindAndModify(words_array,line,SourceFile,auxiliar,SinkFile);    end    auxiliar= fgets(SourceFile);endInitialTab(auxiliar,SinkFile);fprintf(SinkFile,'ENDFOR\n');endfunction ModifyWhile(words_array,line,SourceFile,string,SinkFile)Start_condition = strfind(string,' ');j=1;while uint8(string(Start_condition(1)+j))~=13 & uint8(string(Start_condition(1)+j))~=10    copia(j)=string(Start_condition(1) + j);    j=j+1;endfprintf(SinkFile,'WHILE %s\n',copia);auxiliar = fgets(SourceFile);while  isempty(strfind(auxiliar,'end'))==1    line=line+1;    line_array = char(auxiliar);    if FindCommentsOrNewLines(line_array,SinkFile,line,SourceFile)==1    else    words_array=strtokenizador(line_array,line,SinkFile);    FindAndModify(words_array,line,SourceFile,auxiliar,SinkFile);    end    auxiliar = fgets(SourceFile);endInitialTab(auxiliar,SinkFile);fprintf(SinkFile,'ENDWHILE\n');endfunction ModifyIf(words_array,line,SourceFile,string,SinkFile)Start_condition= strfind(string,' ');j=0;i=0;%while string(Start_condition+j)~='\n' %% This doesn�t workwhile uint8(string(Start_condition+j))~=13 & uint8(string(Start_condition+j))~=10    j=j+1;    i=i+1;    if string(Start_condition(1) + j)=='='        if string(Start_condition(1) + j + 1)=='='            copia(i)=string(Start_condition(1) + j);            j=j+1;        else            copia(i)=string(Start_condition(1) + j);        end    else        copia(i)=string(Start_condition(1) + j);    endendfprintf(SinkFile,'IF %s THEN\n',copia(1:length(copia)-1));auxiliar = fgets(SourceFile);while  isempty(strfind(auxiliar,'end'))==1    clearvars copia;    line=line+1;    line_array = char(auxiliar);    if FindCommentsOrNewLines(line_array,SinkFile,line,SourceFile)==1    else        words_array=strtokenizador(line_array,line,SinkFile);        FindAndModify(words_array,line,SourceFile,auxiliar,SinkFile);        a=0;        if isempty(strfind(auxiliar,'elseif'))==0            a=1;            Start_condition= strfind(auxiliar,' ');            j=0;            i=0;            while uint8(auxiliar(Start_condition+j))~=13 & uint8(auxiliar(Start_condition+j))~=10                j=j+1;                i=i+1;                if auxiliar(Start_condition(1) + j)=='='                    if auxiliar(Start_condition(1) + j + 1)=='='                        copia(i)=auxiliar(Start_condition(1) + j);                        j=j+1;                    else                        copia(i)=auxiliar(Start_condition(1) + j);                    end                else                    copia(i)=auxiliar(Start_condition(1) + j);                end            end            fprintf(SinkFile,'ELSEIF %s THEN\n',copia(1:length(copia)-1));        elseif isempty(strfind(auxiliar,'else'))==0 & a==0            fprintf(SinkFile,'ELSE\n');        end            end    auxiliar = fgets(SourceFile);endfprintf(SinkFile,'ENDIF\n');endfunction result = strfinder(string,words_array,lines)result=0;k=1;while  k<=size(words_array,2)%Recorremos el vector en busca de coincidencias    j=1;    while  j <= size(words_array,3) && words_array(lines,k,j)~= 0        if words_array(lines,k,j)=='_'            if  strcmp(word,string)==1                result=1;            end        end        word(1,j)=char(words_array(lines,k,j));        j=j+1;    end    if  strcmp(word,string)==1        result=1;    end    clearvars word    k=k+1;endendfunction finder=FindAndModifyAllocations(string,SinkFile)finder=0;if strfind(string,'=')%Control sentence!    if (isempty(strfind(string,'MoveJ'))==0 | isempty(strfind(string,'MoveL'))==0 | isempty(strfind(string,'MoveC'))==0| isempty(strfind(string,'for'))==0 | isempty(strfind(string,'while'))==0 | isempty(strfind(string,'if'))==0)==0%Y no coincide con alguna funci�n        %fprintf('Asignaci�n: %s\n Asig(1)=%c - Asig(2)=%c\n', string,string(1),string(2));        declaration=strcat(string(1),string(2));        if strcmp(declaration, 'RT')==1             fprintf(SinkFile, 'CONST robtarget ');        elseif strcmp(declaration, 'TD')==1            fprintf(SinkFile, 'PERS tooldata ');        elseif strcmp(declaration, 'VA')==1            fprintf(SinkFile, 'VAR');        elseif isempty(strfind(string,'['))==1            %DoNothig becuase its a normal var declaration        else                fprintf('WARNING, define the variable or delete the string: \n\n %s\n', string);            fprintf('Before the variable�s name include:\n TD_ for tooldata\n RT_ for robottarget\n VAR_ for variables\n');            return        end        j=1;        k=1;        finder=1;        while string(k)==' '            k=k+1;%Instruction for clear white space and horizontal tab before the asignation        end        while string(k)~=10 & k< length(string)%Including ':' to the asignation.            if strcmp(string(k),'=')==1                copia(j)=':';                j=j+1;                copia(j)='=';                j=j+1;                k=k+1;            else                copia(j)=string(k);                j=j+1;                k=k+1;            end        end        %If its a TargetPoint Should have a "["        if strfind(copia,'[')           %Looking for float numbers           h=1;           copia2='';           while h<length(copia)                if (copia(h)>='0' & copia(h)<='9') & copia(h+1)=='.'                    g=h;                    final=h;                    while copia(h)~=',' & copia(h)~=']'                       if copia(h)~='0' & copia(h)~='.'                           final=h;                       end                       h=h+1;                    end                    for f=g:1:final,                    copia2(f)=copia(f);                    end                    copia2(f+1)=copia(h);                else                  copia2(h)=copia(h);                   end           h=h+1;           end        b=0;        c=0;        g=1;        for f=1:1:length(copia2),            if uint8(copia2(f))==0%Clear null cells in copia2                f=f+1;            elseif copia2(f)==',' & b<3  & (copia2(f-1)<97 | copia2(f-1)>122) & (length(strfind(copia2,','))<3 | c==1)%We put the position in milimeters                b=b+1;                copia3(g:g+5)='*1000,';                f=f+6;                g=g+6;            elseif copia2(f)==']' & b==2 & (copia2(f-1)<97 | copia2(f-1)>122) & (length(strfind(copia2,','))<3 | c==1)                b=b+1;                copia3(g:g+5)='*1000]';                f=f+6;                g=g+6;                c=0;            elseif copia2(f)=='['& copia2(f+1)=='['                 c=1;                 copia3(g)=copia2(f);                 g=g+1;            else                copia3(g)=copia2(f);                g=g+1;            end        end            copia4=clearexpression(copia3);            if strfind(copia3,';')            fprintf(SinkFile,'%s\n',copia4);            else            fprintf(SinkFile,'%s;\n',copia4);                end        else            if strfind(copia,';')            fprintf(SinkFile,'%s\n',copia);            else            fprintf(SinkFile,'%s;\n',copia);                end        end    endendendfunction InitialTab(line_array,SinkFile)if line_array(1)==' ' %| line_array(1)==11 %Space or horizontal tab    fprintf(SinkFile,'%c', line_array(1));    n=2;    while line_array(n)==' ' | line_array(n)==11        fprintf(SinkFile,'%c',line_array(n));        n=n+1;    endendendfunction coment = FindCommentsOrNewLines(line_array,SinkFile,lines,SourceFile)coment=0;a=strfind(line_array,'%');if  isempty(a)==0    %It's posible to have an instructi�n before the comentary    control=1;    i=1;    while i<a        if line_array(i)~=' '            control=i;            i=a;            auxiliar=line_array(control:a-1);            words_array=strtokenizador(line_array,lines,SinkFile);            FindAndModify(words_array,lines,SourceFile,auxiliar,SinkFile);        end        i=i+1;    end    fprintf(SinkFile,'!%s', line_array(a+1:length(line_array)));    coment=1;elseif line_array(1)==13 | line_array(1)==10 | line_array(1)=='\n' | line_array(1)==' ' %New line or carriage return    i=1;    while line_array(i)==' '        i=i+1;    end    if line_array(i)==13 | line_array(i)==10 | line_array(i)=='\n'    fprintf(SinkFile,'\n');    coment=1;    endendendfunction auxiliar=clearexpression(string)pos=strfind(string,'*');length(pos);for i=1:length(pos)    count_back=pos(i)-1;    while string(count_back)~=',' & string(count_back)~='['        start=count_back;        count_back=count_back-1;    end    count_rear=pos(i)+1;    while string(count_rear)~=',' & string(count_rear)~=']'        final=count_rear;        count_rear=count_rear+1;    end    integer=eval(string(start:final));    cadena=int2str(integer);    a=1;    for j=start:final        if a<=length(cadena)        string(j)=cadena(a);        else        string(j)=' ';        end        a=a+1;    end    endj=1;for i=1:length(string)   if string(i)==' '       %DoNothing   else       auxiliar(j)=string(i);       j=j+1;   endendif strfind(auxiliar,'TD')   ToF=strfind(auxiliar,'[');    j=1;   for i=1:length(auxiliar)        if(i==ToF(1)+1)            if auxiliar(ToF(1)+1)=='1'                auxiliar2(j:j+3)='TRUE';                j=j+4;            else                auxiliar2(j:j+4)='FALSE';                j=j+5;            end        else            auxiliar2(j)=auxiliar(i);            j=j+1;        end   end   auxiliar=strcat(auxiliar2,' ');endend